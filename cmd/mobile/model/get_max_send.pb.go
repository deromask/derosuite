// Code generated by protoc-gen-go. DO NOT EDIT.
// source: get_max_send.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetMaxSendParam struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMaxSendParam) Reset()         { *m = GetMaxSendParam{} }
func (m *GetMaxSendParam) String() string { return proto.CompactTextString(m) }
func (*GetMaxSendParam) ProtoMessage()    {}
func (*GetMaxSendParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_50d12ab075022040, []int{0}
}

func (m *GetMaxSendParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMaxSendParam.Unmarshal(m, b)
}
func (m *GetMaxSendParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMaxSendParam.Marshal(b, m, deterministic)
}
func (m *GetMaxSendParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMaxSendParam.Merge(m, src)
}
func (m *GetMaxSendParam) XXX_Size() int {
	return xxx_messageInfo_GetMaxSendParam.Size(m)
}
func (m *GetMaxSendParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMaxSendParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetMaxSendParam proto.InternalMessageInfo

type GetMaxSendResult struct {
	Amount               uint64   `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	AmountFormat         string   `protobuf:"bytes,2,opt,name=amount_format,json=amountFormat,proto3" json:"amount_format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMaxSendResult) Reset()         { *m = GetMaxSendResult{} }
func (m *GetMaxSendResult) String() string { return proto.CompactTextString(m) }
func (*GetMaxSendResult) ProtoMessage()    {}
func (*GetMaxSendResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_50d12ab075022040, []int{1}
}

func (m *GetMaxSendResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMaxSendResult.Unmarshal(m, b)
}
func (m *GetMaxSendResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMaxSendResult.Marshal(b, m, deterministic)
}
func (m *GetMaxSendResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMaxSendResult.Merge(m, src)
}
func (m *GetMaxSendResult) XXX_Size() int {
	return xxx_messageInfo_GetMaxSendResult.Size(m)
}
func (m *GetMaxSendResult) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMaxSendResult.DiscardUnknown(m)
}

var xxx_messageInfo_GetMaxSendResult proto.InternalMessageInfo

func (m *GetMaxSendResult) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *GetMaxSendResult) GetAmountFormat() string {
	if m != nil {
		return m.AmountFormat
	}
	return ""
}

func init() {
	proto.RegisterType((*GetMaxSendParam)(nil), "model.GetMaxSendParam")
	proto.RegisterType((*GetMaxSendResult)(nil), "model.GetMaxSendResult")
}

func init() { proto.RegisterFile("get_max_send.proto", fileDescriptor_50d12ab075022040) }

var fileDescriptor_50d12ab075022040 = []byte{
	// 131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0x4f, 0x2d, 0x89,
	0xcf, 0x4d, 0xac, 0x88, 0x2f, 0x4e, 0xcd, 0x4b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0xcd, 0xcd, 0x4f, 0x49, 0xcd, 0x51, 0x12, 0xe4, 0xe2, 0x77, 0x4f, 0x2d, 0xf1, 0x4d, 0xac, 0x08,
	0x4e, 0xcd, 0x4b, 0x09, 0x48, 0x2c, 0x4a, 0xcc, 0x55, 0xf2, 0xe7, 0x12, 0x40, 0x08, 0x05, 0xa5,
	0x16, 0x97, 0xe6, 0x94, 0x08, 0x89, 0x71, 0xb1, 0x25, 0xe6, 0xe6, 0x97, 0xe6, 0x95, 0x48, 0x30,
	0x2a, 0x30, 0x6a, 0xb0, 0x04, 0x41, 0x79, 0x42, 0xca, 0x5c, 0xbc, 0x10, 0x56, 0x7c, 0x5a, 0x7e,
	0x51, 0x6e, 0x62, 0x89, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x0f, 0x44, 0xd0, 0x0d, 0x2c,
	0x96, 0xc4, 0x06, 0xb6, 0xd1, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x25, 0x06, 0x94, 0x7e, 0x87,
	0x00, 0x00, 0x00,
}
